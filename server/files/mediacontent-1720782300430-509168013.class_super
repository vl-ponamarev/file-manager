class Vehicle {
  constructor(make, model) {
    this.make = make;
    this.model = model;
  }

  start() {
    console.log(`${this.make} ${this.model} is starting.`);
  }
}

class Car extends Vehicle {
  constructor(make, model, doors) {
    super(make, model); // Вызов конструктора родительского класса
    this.doors = doors;
  }

  start() {
    super.start(); // Вызов метода родительского класса
    console.log(`${this.make} ${this.model} with ${this.doors} doors is starting.`);
  }
}

class ElectricCar extends Car {
  constructor(make, model, doors, batteryLife) {
    super(make, model, doors); // Вызов конструктора родительского класса
    this.batteryLife = batteryLife;
  }

  start() {
    super.start(); // Вызов метода родительского класса
    console.log(`${this.make} ${this.model} with ${this.batteryLife}% battery life is starting.`);
  }
}

const myCar = new ElectricCar('Tesla', 'Model S', 4, 100);
myCar.start();
